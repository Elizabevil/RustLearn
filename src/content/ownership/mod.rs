// 计算机语言不断演变过程中，出现了三种流派：
//
// 垃圾回收机制(GC)，在程序运行时不断寻找不再使用的内存，典型代表：Java、Go
// 手动管理内存的分配和释放, 在程序中，通过函数调用的方式来申请和释放内存，典型代表：C++
// 通过所有权来管理内存，编译器在编译时会根据一系列规则进行检查


// Rust 中每一个值都被一个变量所拥有，该变量被称为值的所有者
// 一个值同时只能被一个变量所拥有，或者说一个值只能拥有一个所有者
// 当所有者(变量)离开作用域范围时，这个值将被丢弃(drop)
mod fun;
